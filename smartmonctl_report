#!/bin/bash

#CREDIT: Idea taken from here, thanks for the starter! https://gist.github.com/tommybutler/7592005
# install the smartctl package first! (apt-get install smartctl)

if sudo true
then
   true
else
   echo 'Root privileges required'
   exit 1
fi

helpFunction () {
   echo ""
   echo "Usage: $0"
   echo "Usage: $0 -dV selects dry-run with verbose level logging"
   echo -e "\t-d Use this flag to specify dry run, no files will be transferred, useful in conjunction with -V or -G "
   echo -e "\t-s Override set verbosity to specify silent log level"
   echo -e "\t-V Override set verbosity to specify verbose log level"
   echo -e "\t-G Override set verbosity to specify Debug log level"
   if [ -d "/tmp/$lockname" ]; then
     edebug "removing lock directory"
     rm -r "/tmp/$lockname"
   else
     edebug "problem removing lock directory"
   fi
   exit 1 # Exit script after printing help
}


verbosity=1

source /usr/local/bin/helper_script.sh
source /usr/local/bin/config.sh

#+------------------------+
#+---"Get User Options"---+
#+------------------------+
OPTIND=1
while getopts ":sVGh:" opt
do
    case "${opt}" in
        s) verbosity=$silent_lvl
        edebug "-s specified: Silent mode";;
        V) verbosity=$inf_lvl
        edebug "-V specified: Verbose mode";;

        G) verbosity=$dbg_lvl
        edebug "-G specified: Debug mode";;
        h) helpFunction;;
        ?) helpFunction;;
    esac
done
shift $((OPTIND -1))


#+---------------------+
#+---"Trap & ctrl-c"---+
#+---------------------+
trap clean_ctrlc SIGINT
trap clean_exit SIGTERM
ctrlc_count=0


#+-------------------+
#+---"Main Script"---+
#+-------------------+
for drive in /dev/sd[a-z] /dev/sd[a-z][a-z]
do
   if [[ ! -e $drive ]]; then continue ; fi

#   edebug -n "$drive "

   smart_status=$(
      sudo smartctl -H $drive 2>/dev/null |
      grep '^SMART overall' |
      awk '{ print $6 }'
   )

   [[ "$smart_status" == "" ]] && smart_status='unavailable'

   smart_current_pending_sector=$(
      sudo smartctl -A $drive 2>/dev/null |
      grep Current_Pending_Sector |
      awk '{ print $10 }'
   )

   [[ "$smart_current_pending_sector" -gt 0 ]] && smart_current_pending_sector='WARNING' || smart_current_pending_sector='PASSED'

   reallocated_sector_ct=$(
      sudo smartctl -A $drive 2>/dev/null |
      grep Reallocated_Sector_Ct |
      awk '{ print $10 }'
   )

   [[ "$reallocated_sector_ct" -gt 0 ]] && reallocated_sector_ct='WARNING' || reallocated_sector_ct='PASSED'

   edebug "$drive | Overall: $smart_status | Current_Pending_Sector: $smart_current_pending_sector | Reallocated_Sector_Ct: $reallocated_sector_ct"

   if [[ "$smart_status" == "PASSED" ]] && [[ "$reallocated_sector_ct" == "PASSED" ]] && [[ "$smart_current_pending_sector" == "PASSED" ]]; then
     edebug "no drive errors detected"
   else
     ecrit "ERROR detected with $drive"
   fi

done
